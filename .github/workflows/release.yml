name: Create GitHub Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.VERSION }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - run: bun install
      - run: bun run build
      - id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      - run: bun run scripts/release.js ${{ steps.get_version.outputs.VERSION }}
      - uses: ffurrer2/extract-release-notes@v1
        id: extract_release_notes
        with:
          changelog_file: CHANGELOG.md
      - name: Pack packages
        run: |
          for pkg in core cli; do
            cd packages/$pkg
            [ -f ../../README.md ] && cp ../../README.md . || echo "# ${pkg^}" > README.md
            npm pack
            if [ "$pkg" = "core" ]; then
              mv btr-supply-swap-${{ steps.get_version.outputs.VERSION }}.tgz ../../
            else
              mv btr-supply-swap-cli-${{ steps.get_version.outputs.VERSION }}.tgz ../../
            fi
            rm -f README.md
            cd ../..
          done
      - uses: softprops/action-gh-release@v1
        id: create_release
        with:
          name: Release v${{ steps.get_version.outputs.VERSION }}
          token: ${{ secrets.GITHUB_TOKEN }}
          body: ${{ steps.extract_release_notes.outputs.release_notes }}
          files: |
            btr-supply-swap-${{ steps.get_version.outputs.VERSION }}.tgz
            btr-supply-swap-cli-${{ steps.get_version.outputs.VERSION }}.tgz
      - uses: actions/upload-artifact@v4
        with:
          name: built-packages
          path: packages/
      - run: bun scripts/cleanup.js

  publish:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        registry:
          - name: npmjs
            url: "https://registry.npmjs.org"
            token: NPM_TOKEN
          - name: github
            url: "https://npm.pkg.github.com"
            token: GITHUB_TOKEN
            scope: btr-supply
        package:
          - path: core
            name: swap
          - path: cli
            name: swap-cli
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: built-packages
          path: packages
      - uses: actions/setup-node@v4
        env:
          NODE_AUTH_TOKEN: ${{ secrets[matrix.registry.token] }}
        with:
          node-version: "20"
          registry-url: ${{ matrix.registry.url }}
          scope: ${{ matrix.registry.scope }}
      - id: check_tags
        run: echo "pre=$([[ $GITHUB_REF == *"-"* ]] && echo true || echo false)" >> $GITHUB_OUTPUT
      - name: Publish package
        env:
          NODE_AUTH_TOKEN: ${{ secrets[matrix.registry.token] }}
        run: |
          cd packages/${{ matrix.package.path }}
          npm publish --access public $([[ "${{ steps.check_tags.outputs.pre }}" == 'true' ]] && echo "--tag next")
